version: "3.8"  # Version of the Compose file format

services:
  # Streamlit application to generate Webex Webhooks links
  streamlit:
    build: ./st-webhook-gen  # Build the image from the current directory (./)
    ports:
      - "8501:8501"  # Map container port 8501 to host port 8501
    environment:
      - WEBSERVICES_SERVER_URL = http://devnet-webservices:8000
      - WEBEX_BOT_EMAIL = "commonroom@webex.bot"
    depends_on:
      - web  # Wait for MongoDB to be ready before starting the app
    command: streamlit run webhooks.py --server.port=8501 # Specify Streamlit command


  # FastAPI application service
  web:
    build: .
    container_name: devnet-webservices
    ports:
      - "8000:8000"  # Map container port 8000 to host port 8000
    environment:
      - BOT_ACCESS_TOKEN=${BOT_ACCESS_TOKEN}
      - DEVNET_SERVICE_CLIENT_ID=${DEVNET_SERVICE_CLIENT_ID}
      - DEVNET_SERVICE_CLIENT_SECRET=${DEVNET_SERVICE_CLIENT_SECRET}
      - COMMON_ROOM_BEARER_TOKEN=${COMMON_ROOM_BEARER_TOKEN}
      - DB_CONNECT_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017
    depends_on:
      - mongodb  # Wait for MongoDB to be ready before starting the app
    command: uvicorn main:app --host 0.0.0.0 --port 8000  # Specify FastAPI command

  # MongoDB service
  mongodb:
    image: mongo:latest  # Use the official MongoDB image
    environment:      
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
    volumes:
      - mongodb-data:/data/db  # Create a named volume for persistent data
      - ./seed_data/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js  # Seed data for MongoDB


# Define named volume for MongoDB data
volumes:
  mongodb-data:
